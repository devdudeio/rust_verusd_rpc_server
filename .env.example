# Rust Verusd RPC Server - Environment Variable Configuration Example
# Copy this file to .env and fill in your actual values
# DO NOT commit .env with secrets to version control!

# ===================================================================
# REQUIRED: Upstream Verus RPC Connection
# ===================================================================

# URL of the Verus daemon RPC endpoint
VERUS_RPC_RPC_URL=http://localhost:27486

# RPC username (configured in VRSC.conf)
# Minimum 12 characters recommended
VERUS_RPC_RPC_USER=your_rpc_username

# RPC password (configured in VRSC.conf)
# Minimum 12 characters required for security
VERUS_RPC_RPC_PASSWORD=your_secure_rpc_password_here

# ===================================================================
# REQUIRED: Server Configuration
# ===================================================================

# Port to listen on (1-65535)
# Use 8080 for local development, configure reverse proxy for production
VERUS_RPC_SERVER_PORT=8080

# Address to bind to
# 127.0.0.1 = localhost only (secure for development)
# 0.0.0.0 = all interfaces (use with auth and reverse proxy in production)
VERUS_RPC_SERVER_ADDR=127.0.0.1

# ===================================================================
# OPTIONAL: Performance & Timeouts
# ===================================================================

# Request timeout in seconds (default: 30)
# How long to wait for upstream RPC responses
#VERUS_RPC_REQUEST_TIMEOUT=30

# ===================================================================
# OPTIONAL: Security - API Key Authentication
# ===================================================================

# Comma-separated list of valid API keys
# Generate strong keys with: openssl rand -hex 32
# Minimum 16 characters per key recommended
# If not set, authentication is DISABLED (not recommended for production!)
#VERUS_RPC_API_KEYS=your-first-api-key-here,your-second-api-key-here

# ===================================================================
# OPTIONAL: Security - Rate Limiting
# ===================================================================

# Maximum requests per IP per minute (default: 60)
#VERUS_RPC_RATE_LIMIT_PER_MINUTE=60

# Burst capacity - how many requests can happen instantly (default: 10)
#VERUS_RPC_RATE_LIMIT_BURST=10

# ===================================================================
# OPTIONAL: CORS Configuration
# ===================================================================

# Comma-separated list of allowed origins
# "*" = allow all (development only!)
# Production: specify exact origins
#VERUS_RPC_CORS_ALLOWED_ORIGINS=https://example.com,https://app.example.com

# ===================================================================
# LOGGING
# ===================================================================

# Logging level: error, warn, info, debug, trace
# Default: info
#RUST_LOG=info

# For verbose debugging:
#RUST_LOG=debug

# For minimal logging:
#RUST_LOG=error

# ===================================================================
# NOTES
# ===================================================================

# 1. Environment variables override values in Conf.toml
# 2. For production, use a reverse proxy (Caddy/nginx) for HTTPS
# 3. Always enable API key authentication in production
# 4. Configure firewall rules to restrict access
# 5. Review SECURITY.md for best practices
# 6. Monitor logs and metrics for suspicious activity
